{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 66d6fb80fb35b2a430d2","webpack:///./src/my-numbers.js"],"names":["formatRegex","RegExp","invalidFormats","round","num","decimalNumbers","Math","pow","escapeRegEx","str","replace","r","parseFormatStr","formatStr","indexOf","result","exec","format","prefix","sign","integer","thousands","decimal","suffix","signOptional","endsWith","undefined","decimalOptional","length","parseModifiers","modifier","inv","makeFormatRegex","formatObj","regex","pkeys","Object","keys","_prefixes","map","p","join","skeys","_suffixes","s","_regex","_replaceThousands","parseInt","int","parseNumber","number","_","parseFloat","stringify","Error","split","dec","strNum","reverse","match","dln","zeros","repeat","MyNumbers","formats","prefixes","suffixes","multi","Array","isArray","myNumber","_fdata","forEach","parse"],"mappings":"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","file":"my-numbers.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MyNumbers\"] = factory();\n\telse\n\t\troot[\"MyNumbers\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 66d6fb80fb35b2a430d2","/**\n * @preserve\n * My numbers\n * @Author David Casado Martínez @davidnotplay\n * @license MIT\n */\n\n/**\n * Regular expression for get the format parts.\n */\nconst formatRegex = new RegExp(\n  /^(#)?(\\+\\??)?((?:1([^\\d]))?1)?(?:([^\\d])(0+\\??))?(#)?$/ \n)\n\n// this are invalid formats but the `formatRegex` regular expression accept as valids.\nconst invalidFormats = [\n  '#',\n  '##',\n  '#+#',\n  '+',\n  '#+?#',\n  '+?',\n  '#+?',\n  '+?#'\n]\n\n/**\n * Round the `num` number.\n * @param {float} num number to round\n * @param {int} decimalNumbers number of decimals\n * @return {float} Number rounded.\n */\nconst round = (num, decimalNumbers) => {\n  return Math.round(num * Math.pow(10, decimalNumbers)) / Math.pow(10, decimalNumbers) \n}\n\n/**\n * Escape the regular expression characters of the `str` string.\n * @param {string} str string with you want escape\n * @return {string} String escaped\n */\nconst escapeRegEx = (str) => {\n  return str.replace(/([.+?*\\\\|()\\][{}])/g, r => '\\\\' + r[0])\n}\n\n/**\n * Parse the `formatStr` format and return a object with his components.\n * @param {string} formatStr String format\n * @return {object}\n */\nconst parseFormatStr = (formatStr) => {\n  if (invalidFormats.indexOf(formatStr) !== -1) {\n    return false\n  }\n\n  const result = formatRegex.exec(formatStr)\n\n  if (result === null) {\n    return false\n  }\n\n  const format = {}\n  const [\n    str, prefix, sign, integer, thousands, decimal, decimalNumbers, suffix\n  ] = result\n\n  if (str === '') {\n    return false\n  }\n\n  format.prefix = prefix === '#'\n  format.suffix = suffix === '#'\n  format.sign = sign === '+' || sign === '+?'\n  format.signOptional = format.sign && sign.endsWith('?')\n  format.integer = integer !== undefined\n  format.decimal = decimal || false\n  format.thousands = thousands || false\n  format.decimalOptional = (decimalNumbers || '').endsWith('?')\n  format.decimalNumbers = `${decimalNumbers || ''}`.length - (format.decimalOptional ? 1 : 0)\n\n\n  return format\n}\n\n/**\n * Apply the `modifier` modifier in the `num` number\n * @param {float} num Number for the mofifier\n * @param {float|function} modifier modifier will apply in the number\n * @param {boolean} inv Indicate if the conversion is str -> num or num -> str\n * @return {float} number with the modifier applied.\n */\nconst parseModifiers = (num, modifier, inv) => {\n  if (typeof modifier === 'number') {\n    return !inv ? num * modifier : num * (1/modifier)\n  }\n\n  return modifier(num, inv)\n}\n\n/**\n * Make the regulars expressions using the `formatObj` data.\n * @param {objec} formatObj Object with the format data\n * @return {object} \n *    - {RegExp} _regex: Regular expression necessary for parse the number.\n *    - {function} _replaceThousands: Function for replace the thousands number.\n */\nconst makeFormatRegex = (formatObj)  => {\n  let regex = ''\n\n  const pkeys = Object.keys(formatObj._prefixes).map(p => escapeRegEx(p))\n  regex = `(${pkeys.join('|')})?`\n\n  regex = formatObj.sign ? `${regex}(\\\\+|-)?` : `${regex}()`\n\n  if (formatObj.integer) {\n    if (!formatObj.thousands) {\n      regex = `${regex}([0-9]+)`\n    } else {\n      regex = `${regex}([1-9][0-9]{0,2}(?:\\\\${formatObj.thousands}[0-9]{3,3})*)`\n    }\n  } else {\n    regex = regex + '()'\n  }\n\n  if(formatObj.decimal) {\n    regex = `${regex}(?:\\\\${formatObj.decimal}([0-9]+))?`\n  }\n\n  const skeys = Object.keys(formatObj._suffixes).map(s => escapeRegEx(s))\n  regex = `${regex}(${skeys.join('|')})?`\n\n  return {\n    _regex: new RegExp(`^${regex}$`),\n    _replaceThousands: int => parseInt(\n      formatObj.thousands ? int.replace(new RegExp(`\\\\${formatObj.thousands}`, 'g'), '') : int\n    )\n  }\n}\n\n/**\n * Parse the `number` string in a number using the `format` data.\n * @param {string} number number will be parsed\n * @param {object} format Format data\n * @return {int} number parsed.\n */\nconst parseNumber = (number, format) => {\n  const r = format._regex.exec(number)\n\n  if (r === null) {\n    return false\n  }\n\n  //eslint-disable-next-line no-unused-vars\n  const [ _, prefix, sign, integer, decimal, suffix ] = r\n  let num = 0\n\n  if (integer) {\n    num = format._replaceThousands(integer)\n  }\n\n  if (decimal) {\n    num += parseFloat(`0.${decimal}`)\n  }\n\n  if (sign === '-') {\n    num *= -1\n  }\n\n  if (prefix && format.prefix) {\n    num = parseModifiers(num, format._prefixes[prefix], false)\n  }\n\n  if (suffix && format.suffix) {\n    num = parseModifiers(num, format._suffixes[suffix], false)\n  }\n\n  return round(num, format.decimalNumbers)\n}\n\n\n/**\n * Transform a number in a number string formatted.\n * @param {int} num number will transform in a string\n * @param {object} format Format data\n * @param {string} prefix prefix will add to the string\n * @param {string} suffix suffix will add to the string.\n * @return {string} number formatted\n */\nconst stringify = (num, format, prefix = null, suffix = null) => {\n  if (prefix) {\n    const p = format._prefixes[prefix]\n    if (!p) {\n      throw new Error(`${prefix} prefix not found`)\n    }\n\n    num = parseModifiers(num, p, true)\n  }\n\n  if (suffix) {\n    const s = format._suffixes[suffix]\n\n    if (!s) {\n      throw new Error(`${suffix} suffix not found`)\n    }\n\n    num = parseModifiers(num, s, true)\n  }\n\n  num = round(num, format.decimalNumbers)\n  const [int, dec] = `${num}`.split(/\\./)\n  let strNum = ''\n\n  if(num < 0 && format.sign === false) {\n    return false\n  }\n\n  // integer part and no integer format\n  if (!format.integer && int !== '0') {\n    return false\n  }\n\n  // transform integer part\n  if (format.integer) {\n    strNum = int.split('').reverse().join('').match(/[0-9]{1,3}/g)\n      .join(format.thousands).split('').reverse().join('')\n  }\n\n  // decimal part\n  if (format.decimalNumbers > 0) {\n    if (!format.decimalOptional) {\n      const dln = (dec || '').length\n      const zeros = dln < format.decimalNumbers\n        ? '0'.repeat(format.decimalNumbers - dln)\n        : ''\n      \n      strNum = `${strNum}${format.decimal}${dec || ''}${zeros}`\n    } else if (parseInt(dec || '0') !== 0) {\n      strNum = `${strNum}${format.decimal}${dec}`\n    }\n  }\n\n  if (format.sign) {\n    strNum = (num < 0 ? '-' : (!format.signOptional ? '+' : '')) + strNum\n  }\n\n  if (prefix) {\n    strNum = prefix + strNum\n  }\n\n  if (suffix) {\n    strNum = strNum + suffix\n  }\n  \n  return strNum\n}\n\n\n/**\n * @param {string|array} formats Formats it will use for parse and stringify the numbers\n * @param {object} prefixes Object with the prefix and his values\n * @param {object} suffixes Object with the suffix and his values\n */\nconst MyNumbers = (formats, prefixes = {}, suffixes = {}) => {\n  const multi = Array.isArray(formats)\n  formats = multi ? formats : [formats]\n\n  const myNumber = {}\n  myNumber._fdata = {}\n\n  formats.forEach(formatStr => {\n    let format = parseFormatStr(formatStr)\n\n    // invalid format\n    if (!format) {\n      throw new Error(`The format '${formatStr}' is invalid.`)\n    }\n\n    format._prefixes = prefixes || {}\n    format._suffixes = suffixes || {}\n    format = { ...format, ...makeFormatRegex(format) }\n    myNumber._fdata[formatStr] = format\n  })\n\n  myNumber.parse = (number) => {\n    const r = {} \n\n    Object.keys(myNumber._fdata).forEach(formatStr => {\n      r[formatStr] = parseNumber(number, myNumber._fdata[formatStr])\n    })\n    return multi ? r : r[formats[0]]\n  }\n\n  myNumber.stringify = (number, prefix = null, suffix = null) => {\n    const r = {}\n\n    Object.keys(myNumber._fdata).forEach(formatStr => {\n      r[formatStr] = stringify(number, myNumber._fdata[formatStr], prefix, suffix)\n    })\n\n    return multi ? r : r[formats[0]]\n\n  }\n\n  return myNumber \n}\n\nexport default MyNumbers\n\n\n\n// WEBPACK FOOTER //\n// ./src/my-numbers.js"],"sourceRoot":""}